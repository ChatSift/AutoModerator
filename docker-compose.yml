version: "3.7"

services:
  base:
    image: automoderator:base
    build:
      context: ./
      dockerfile: ./docker/base/Dockerfile

  rabbitmq:
    image: rabbitmq:3-management-alpine
    restart: unless-stopped
    expose:
      - '5672'
    healthcheck:
      test: ['CMD', 'rabbitmq-diagnostics', '-q', 'ping']
      interval: 60s
      timeout: 5s

  postgres:
    build:
      context: ./docker/postgresql
      dockerfile: ./Dockerfile
    environment:
      POSTGRES_USER: "automoderator"
      POSTGRES_PASSWORD: "admin"
      POSTGRES_DB: "automoderator"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U automoderator"]
      interval: 10s
      timeout: 5s

  api:
    build:
      context: ./
      dockerfile: ./docker/api/Dockerfile
    environment:
      DB_URL: "postgres://automoderator:admin@postgres:5432/automoderator"
      AMQP_URL: "amqp://rabbitmq:5672"
    restart: unless-stopped
    depends_on:
      - postgres

  auth:
    build:
      context: ./
      dockerfile: ./docker/auth/Dockerfile
    environment:
      DB_URL: "postgres://automoderator:admin@postgres:5432/automoderator"
      DISCORD_SCOPES: "identify,email"
    restart: unless-stopped
    depends_on:
      - postgres

  automod:
    build:
      context: ./
      dockerfile: ./docker/automod/Dockerfile
    environment:
      DB_URL: "postgres://automoderator:admin@postgres:5432/automoderator"
      AMQP_URL: "amqp://rabbitmq:5672"
    restart: unless-stopped
    depends_on:
      - postgres
      - rabbitmq

  cron-runner:
    build:
      context: ./
      dockerfile: ./docker/cron-runner/Dockerfile
    environment:
      DB_URL: "postgres://automoderator:admin@postgres:5432/automoderator"
    restart: unless-stopped
    depends_on:
      - postgres

  interactions:
    build:
      context: ./
      dockerfile: ./docker/interactions/Dockerfile
    environment:
      DB_URL: "postgres://automoderator:admin@postgres:5432/automoderator"
      AMQP_URL: "amqp://rabbitmq:5672"
    restart: unless-stopped
    depends_on:
      - postgres
      - rabbitmq

  logging:
    build:
      context: ./
      dockerfile: ./docker/logging/Dockerfile
    environment:
      DB_URL: "postgres://automoderator:admin@postgres:5432/automoderator"
      AMQP_URL: "amqp://rabbitmq:5672"
    restart: unless-stopped
    depends_on:
      - rabbitmq

  gateway:
    image: cordislib/gateway:1.0.1
    environment:
      AMQP_HOST: "amqp://rabbitmq:5672"
      WS_INTENTS: "guildMessages,guildMembers,guildBans"
    restart: unless-stopped
    depends_on:
      - rabbitmq

volumes:
  elis-data:
    name: "automoderator-elis-data"
  postgres-data:
    name: "automoderator-postgres-data"
